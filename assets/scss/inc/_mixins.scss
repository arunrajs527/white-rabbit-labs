@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
}

@mixin animate($properties) {
    -webkit-transition: $properties;
    -moz-transition: $properties;
    -ms-transition: $properties;
    -o-transition: $properties;
    transition: $properties;
}

// material design shadow levels
@mixin box-shadow ($level) {
    @if $level==0 {
        box-shadow: none;
        -webkit-box-shadow: none;
    }

    @else if $level==1 {
        box-shadow: 0 1px 3px rgba($primary-color, 0.12), 0 1px 2px rgba($primary-color, 0.24);
        -webkit-box-shadow: 0 1px 3px rgba($primary-color, 0.12), 0 1px 2px rgba($primary-color, 0.24);
    }

    @else if $level==2 {
        box-shadow: 0 3px 6px rgba($primary-color, 0.16), 0 3px 6px rgba($primary-color, 0.23);
        -webkit-box-shadow: 0 3px 6px rgba($primary-color, 0.16), 0 3px 6px rgba($primary-color, 0.23);
    }

    @else if $level==3 {
        box-shadow: 0 10px 20px rgba($primary-color, 0.19), 0 6px 6px rgba($primary-color, 0.23);
        -webkit-box-shadow: 0 10px 20px rgba($primary-color, 0.19), 0 6px 6px rgba($primary-color, 0.23);
    }

    @else if $level==4 {
        box-shadow: 0 14px 28px rgba($primary-color, 0.25), 0 10px 10px rgba($primary-color, 0.22);
        -webkit-box-shadow: 0 14px 28px rgba($primary-color, 0.25), 0 10px 10px rgba($primary-color, 0.22);
    }

    @else if $level==5 {
        box-shadow: 0 19px 38px rgba($primary-color, 0.30), 0 15px 12px rgba($primary-color, 0.22);
        -webkit-box-shadow: 0 19px 38px rgba($primary-color, 0.30), 0 15px 12px rgba($primary-color, 0.22);
    }

}

// custome margins

$spaceamounts: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .m-#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px !important;
    }
  
    .p-#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px !important;
    }
  }
}


// Custom input place holder color change

@mixin placeholder($color, $fontsize, $fontweight) {
    &::-webkit-input-placeholder {
        /* WebKit browsers */
        color: $color !important;
        font-size: $fontsize;
        font-weight: $fontweight;
    }

    &:-moz-placeholder {
        /* Mozilla Firefox 4 to 18 */
        color: $color !important;
        font-size: $fontsize;
        font-weight: $fontweight;
    }

    &::-moz-placeholder {
        /* Mozilla Firefox 19+ */
        color: $color !important;
        font-size: $fontsize;
        font-weight: $fontweight;
    }

    &:-ms-input-placeholder {
        /* Internet Explorer 10+ */
        color: $color !important;
        font-size: $fontsize;
        font-weight: $fontweight;
    }
}